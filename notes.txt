General : To make entries to system variables
search for edit system variables
click on "edit system variables" - This will openup a window called system variables
select the Advanced Tab
click on "environment variable"
In the second window click on "New"
Enter variable name as "JAVA_HOME"
value as "C:\Program Files\Java\jdk1.8.0_121"
restart command prompt

1. JDK 8 and install
JAVA_HOME=C:\Program Files\Java\jdk1.8.0_121
echo %JAVA_HOME%
java -version

2. Install jenkins
https://jenkins.io/
http://mirrors.jenkins.io/war-stable/latest/jenkins.war

3. java -jar jenkins.war --httpPort=8090

Create a project
-------------------------------
Click on new item on jenkins dashboard
enter a name for your project (project1)
select freestyle project
click OK
This will take you to the project configuration page
click save
your project project1 will show up on the home page of jenkins/dashboard


Configure Git
-----------------------------
download and install git ( if not already installed)
https://git-scm.com/download/win

dashboard -> manage jenkins -> Global tool configuration of jenkins

Git 
Add Git
Name : git
Executable path : git.exe

Configure project to download code from Git
-------------------------------------------
Click on project -> click on configure
under source code management
select git
https://github.com/AdityaSP/devopsdemo

Save

Trigger a build
------------------------------------------
click on build now - build #1 will start and should go to success

Check the output
-------------------------------
click on the build number and it will show you the output

Build Schedule
-------------------------------
Click on the project 
Select Build periodically
Enter this as build schedule
H/15 * * * *
click on save

Configuring a build step
-------------------------------
Maven project
http://www-us.apache.org/dist/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.zip

1. MAVEN_HOME=D:\sw\apache-maven-3.3.9
2. update your path entries
edit PATH variable and add ;D:\sw\apache-maven-3.3.9\bin


Configuring Maven
------------------------------
(Hint: Similar to Git configuration)

Configuring a build step
------------------------------
dashboard -> click on project1 -> configure -> under build heading -> Add a build step -> Invoke top level maven targets
Maven : maven that you have configured in the above step

Goals: install

Save

Configuring a post build action
------------------------------
1. dashboard -> click on project1 -> configure -> postbuild actions -> archive artifacts
2. Files to archive target/*jar 
3. (optional) select do not fail build
4. Save
5. trigger a build
6. Observe : *.jar in ~/.jenkins/jobs/Project1/<jobnumber>/archive/










